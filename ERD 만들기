방법론이란? 
여러 정보의 축적으로 설계를 하는데 효율적인 이정표 같은것 



방법론이란?
구조적 방법론  :   -DFD[Data Flow Diagram] (데이터의 흐름을 그림으로 그려본다.)
정보공학 방법론:   -ERD(Entity Relationship Diagram)
객체지향 방법론:   -Class Diagram


방법론의 필요성

1.의사소통수단
2.품질보증 수단 
3.생산성의 향상
4.재사용의 가능성
5.효과적인 프로젝트의 관리
6.기술 수준의 향상


---------------------------------------------------------------------------------------------------------------------
Modeling이란? 
현실세계의 데이터를 컴퓨터 세계의 데이터로 표현한 것을 말한다. 
현실세계 -> 분석 ->개념적 데이터 모델링 ->논리적 데이터 모델링 ->물리적데이터 모델링


단계

                     사용자의 요구
                           ↓
        정보에 대한 요구         프로그램에 대한 요구
              ↓                          ↓
      개념적 데이터 모델링            기능 모델링 
             ↓                           ↓
      논리적 데이터 베이스 설계         프로그램 설계 
             ↓                            ↓
      물리적 데이터베이스 설계         프로그램 구축 
      
                            ↓
                        정보 시스템


분석 설계 단계 

계획    
       1) 세부 추진일정 수립 
       2) 인터뷰 계획
       3) 자료수집 계획
       
분석 
       1)장표와 인터뷰 자료 등 수집된 자료로 Data분석 
       2)개념적 데이터 모델링 ERD 분석
       3)DFD와 FHD 작성
       
설계   
       1)ERD를 기반으로 테이블 설계서 작성,물리적 구조설계
       2)FHD를 기반으로 화면 설계서 작성
        
구축   
      1)테이블 설계서를 기반으로 테이블 생성
      2)화면 설계서를 기반으로 프로그램 코딩
      
      
*이윤을 추구하는 사람들이 관심을 가져야할 3가지 
상품? 
누가사먹나?
누구와 같이 만드나?       
      
---------------------------- -------------- -------------- -------------- -------------- -------------- 
ER모델이란? 
Entity와 Attribute로 요소들을 묶고 관계를 설명하는 것. 

Entity는 명사로 되어 있고 Attribute는 관리해야할 항목들로 되어 있다. 


ex)
저장을 해야할 대상 - 관심의 대상 
1)비디오 테이프 
2) 회원               <-ENTITY

ex)
회원에는 어떤정보가 있으면 좋을까?
이름,등록번호,전화번호 <-ATTRIBUTE


실체
기업에서 지속적인 관심을 가지고 정보화를 해야 하는 대상
영속적이며 식별 가능한 DATA 요소를 갖는다 

대상 
실세계에서 사용되는 명사적 단어 


*Attribute
ATTRIBUTE는 ENTITY의 범위를 뛰어 넘는 것이면 안된다. 
속성의 명칭은 명확해야 하며 내용을 함축 할 수 있도록하고 파생되는 속성은 정의하지 말아야한다. 
(파생속성?
월급,연봉 연봉은 월급의 *12로써 월급을 통해 연봉을 만들어 낼 수 있기 때문에 파생속성이라 한다.
즉 데이터는 꼭 넣어야 하는 것들만 최소화 시켜서 넣어야 한다. 
)


Identifier
키 종류 ?
1. 후보 키(Candidate Key)
Entity 내에서 유일하게 구분할 수 있는 속성 or 하나이상의 속성

2.기본 키(Primary Key)
Entity 내에서 유일하게 식별하는데 가장 적합한 속성

3.대체 키(Alternate Key)
Candidate Key 중에서 Primary Key로 선정되지 않은 속성

4.복합 키(Composite Key)
하나의 속성으로는 Primary Key가 될 수 없는 경우 둘 이상 속성을 묶어 놓은 속성

5. 대리키
식별자가 너무 길거나 여러 개의 속성으로 구성되어 있는 경우 인위적으로 추가한 속성


ex)
세자비를 예로 들 경우 ?

세자비 후보들                          - 후보키 
세자비                                - 후보키들 중에서 유일하게 식별하는데 가장 적합한 속성 기본 키 
후보들 중에 아깝게 떨어진 애들          - 대체키 
하나로는 안되고 둘이상을 모아놓은애들    - 복합키 
             

EX)
학생에서 PRIMARY키는? 
주민등록번호,지문,TEL,주소  <-후보군 
주민등록번호                <-PRIMARYKEY 
지문,TEL,주소               <-대체키 


PRIMARYKEY인 주민등록번호를 대신할 수 있도록 만든것이 학번인데 학번은 뭐가 될까?
대리키가 된다.-대체키 아니다- 수에 대한 요소들이 이러한 속성을 많이 갖는다. 

Relationship이란?
ENTITY간의 관계를 명시한것이다. 

선을 그어서 주어 동사 목적어 말을 만들어본다. 
수동인지 능동인지를 본다.
상관관계 한번에 선을 긋는다. 
동사인 배운다 가르친다는 다이아몬드로 표시를 그리고 그안에 동사를 넣는다. 
◇


EX)
두개의 ENTITY 학생, 교수 
학생 -  ◇+ 배운다   ->    교수

학생 <- ◇+ 가르친다 -     교수


수량 관계 표시 ?
수량의 관계는?               
  1개:1로 표시 
 다수:>
    0:º로 표시한다. 

EX)
           -|-|-
학생(다수)->◇º1<-교수(하나)
 학생 = 다수 
 교수 0혹은 1 혹은 다수 


*ERD를 표시할 때 중요한 점?
중요한 것은 업무적 상관관계만을 표시해야한다는 것이다. 그 이상으로 
모호하거나 비업무적인 것들은 철저히 배제해야한다. 


*Relationship Matrix 
행과 열에 entity로 채워서 관계가 있는지를 살펴본다. 


ERD그리기
실체는 relationship matrix에서 다른 실체와 가장 많은 관계를 가지고 있는 실체를 중앙에 배치한다. 
공간을 최대한 절약한다 .
상황에 따라 가로나 세로를 확장하여 그리면 사선이 없어지고 나름의 특징이 부여된다. 
대각선으로 긋는것은 공간낭비가 심하니 쓰지말자 . 정 해야한다면 ㄱ나 ㄴ자로 해야 한다. 


*analogue로 ERD 그리는 방법 
post-it 활용법
entity명 attribute명을 써서 붙인다. 
이해하기 쉽다

white board 활용법  
서로 communication 용이 
효과적인 저장이 불편하다 
확장된 표현을 할 수 없다. 


*online으로 ERD를 그리는 방법 
대부분 값비싼 프로그램이다.
무료프로그램인 https://online.visual-paradigm.com/app/diagrams/#diagram:proj=0&type=BlankDiagram를 참고하자










